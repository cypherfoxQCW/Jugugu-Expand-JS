/**
 * 扩展接入
 * 接入jugugu区块链全包的全部接口，访问IP需要连续管理员，添加业务服务器IP
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2001 model module.
 * @module model/InlineResponse2001
 * @version 1.0.0
 */
class InlineResponse2001 {
    /**
     * @member {String} state
     * @type {String}
     */
    state;
    /**
     * @member {String} hash
     * @type {String}
     */
    hash;
    /**
     * @member {String} contract
     * @type {String}
     */
    contract;
    /**
     * @member {String} form
     * @type {String}
     */
    form;
    /**
     * @member {String} to
     * @type {String}
     */
    to;
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {String} amount
     * @type {String}
     */
    amount;

    

    /**
     * Constructs a new <code>InlineResponse2001</code>.
     * @alias module:model/InlineResponse2001
     * @param state {String} 0代表失败  1代表成功
     * @param hash {String} state=0时为错误信息，state=1时交易hash
     * @param contract {String} 合约地址
     * @param form {String} 源地址
     * @param to {String} 目的地址
     * @param id {String} NFT的ID
     * @param amount {String} 转移的数量
     */
    constructor(state, hash, contract, form, to, id, amount) { 
        
        InlineResponse2001.initialize(this, state, hash, contract, form, to, id, amount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state, hash, contract, form, to, id, amount) { 
        obj['state'] = state;
        obj['hash'] = hash;
        obj['contract'] = contract;
        obj['form'] = form;
        obj['to'] = to;
        obj['id'] = id;
        obj['amount'] = amount;
    }

    /**
     * Constructs a <code>InlineResponse2001</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2001} obj Optional instance to populate.
     * @return {module:model/InlineResponse2001} The populated <code>InlineResponse2001</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001();

            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('hash')) {
                obj['hash'] = ApiClient.convertToType(data['hash'], 'String');
            }
            if (data.hasOwnProperty('contract')) {
                obj['contract'] = ApiClient.convertToType(data['contract'], 'String');
            }
            if (data.hasOwnProperty('form')) {
                obj['form'] = ApiClient.convertToType(data['form'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
            }
        }
        return obj;
    }
}



export default InlineResponse2001;

